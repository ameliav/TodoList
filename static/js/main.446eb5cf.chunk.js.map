{"version":3,"sources":["reducers/todosReducer.js","reducers/index.js","reducers/editModeReducer.js","components/Menu.js","components/StatusButton.js","actions/index.js","components/DeleteButton.js","components/CardContent.js","components/Card.js","components/AddCard.js","components/App.js","index.js"],"names":["todoList","id","task","date","person","status","combineReducers","todos","action","type","map","todo","payload","Math","floor","random","__","filter","o","editMode","state","Menu","swal","fire","title","html","className","href","onClick","this","aboutClick","contactClick","React","Component","StatusButton","props","checkstatus","changeStatus","connect","console","log","DeleteButton","handleDelete","text","showCancelButton","confirmButtonText","cancelButtonText","then","result","value","deleteCard","checkiconstatus","handleStatus","CardContent","executeSave","setState","editCard","document","getElementById","executeCancel","key","defaultValue","editCardRender","cardRender","Card","renderHelper","AddCard","handleClick","tid","did","pid","addCard","placeholder","App","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.446eb5cf.chunk.js","sourcesContent":["import __ from 'lodash';\r\n\r\nlet todoList = [\r\n    { id: 1, task: 'Do dishes', date: '8/5/20 10pm', person: 'AV', status: 'completed'},\r\n    { id: 2, task: 'Vacuum bathrooms', date: '8/7/20 8pm', person: 'KB', status: 'not_started'},\r\n    { id: 3, task: 'Do laundry', date: '8/8/20 7pm', person: 'AV', status: 'not_started'},\r\n    { id: 4, task: 'Give the dog a bath', date: '8/9/20 3pm', person: 'KB', status: 'not_started'},\r\n    { id: 5, task: 'Vacuum bedrooms', date: '8/10/20 5pm', person: 'AV', status: 'not_started'},\r\n    { id: 6, task: 'Vacuum living room', date: '8/9/20 3pm', person: 'AV', status: 'not_started'},\r\n    { id: 7, task: 'Grocery shopping', date: '8/10/20 5pm', person: 'KB', status: 'not_started'}\r\n];\r\n\r\n//list of todos\r\nexport default (state = null, action) => {\r\n    if (action.type === 'STATUS_CHANGE') {\r\n        todoList = todoList.map(\r\n            (todo) => {\r\n                if (todo.id === action.payload.id) {\r\n                    if (action.payload.status === 'completed') {\r\n                        todo.status = 'not_started';\r\n                    }\r\n                    else {todo.status = 'completed'; }\r\n                } return todo;\r\n            }); \r\n            return todoList;\r\n    }\r\n    else if (action.type === 'ADD_CARD') {\r\n        todoList = [...todoList,\r\n            {\r\n                id: Math.floor(Math.random() * 99999999), task: action.payload.task, date: action.payload.date,\r\n            person: action.payload.person, status: 'not_started'}\r\n        ]\r\n        return todoList;\r\n    }\r\n    else if (action.type === 'DELETE_CARD') {\r\n        todoList = __.filter(todoList, function (o) { return o.id !== action.payload.id; });\r\n        //todoList = todoList.filter(tid => tid !== action.payload.id)\r\n    }\r\n    else if (action.type === 'EDIT_CARD') {\r\n        todoList = todoList.map(\r\n            (todo) => {\r\n                if (todo.id === action.payload.id) {\r\n                    return { ...todo, task: action.payload.task, date: action.payload.date, person: action.payload.person }\r\n                }\r\n                else {\r\n                    return todo;\r\n                }\r\n            })\r\n    }\r\n    return todoList;\r\n};","import {combineReducers} from 'redux';\nimport todosReducer from './todosReducer';\nimport editModeReducer from './editModeReducer';\n\nexport default combineReducers(\n  {\n  todos: todosReducer,\n  editMode: editModeReducer\n  }\n)\n\n/*map is a function used for arrays\nmap takes in a function as a parameter, map(func())\nthat function will execute for each element in the array, map(func(element))\nand returns the executed element to map \nwhich will push that element into a new array, [newarray]\n  */","export default (state = null, action) => {\r\n    \r\n    if (action.type === 'EDIT_CARD') {       \r\n        return false;\r\n    }\r\n    return state;\r\n}\r\n","import React from 'react';\r\nimport swal from 'sweetalert2';\r\n\r\nclass Menu extends React.Component {\r\n\r\n    aboutClick() {\r\n        swal.fire(\r\n        {title:'About', \r\n        html:\"An interactive webpage to create, edit, and delete tasks.\"+\r\n        \"<br/><br/>Created by <b>Amelia</b> using React-Redux and packaged in npm.\"\r\n        })\r\n    }\r\n    contactClick() {\r\n        swal.fire(\r\n        {title:'Contact me', \r\n        html: 'Please reach me through my main github page.'\r\n        })\r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"ui inverted menu\">\r\n                <a className=\"item active\" href=\"../\">Home</a>\r\n                <a className=\"item\" onClick={this.aboutClick}>About</a>\r\n                <div className=\"right menu\">\r\n                    <a className=\"item\" onClick={this.contactClick}>Contact</a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Menu;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeStatus } from '../actions';\r\n\r\nclass StatusButton extends React.Component {\r\n    \r\n    checkstatus(status) {\r\n        if (status === 'completed') {\r\n            return [\"ui tiny left floated yellow button\", \"Restart\"];\r\n        }\r\n        else {\r\n            return [\"ui tiny right floated green button\", \"Complete\"];\r\n        }\r\n    }\r\n    render() {\r\n        const { status, id } = this.props.todo;\r\n        return (\r\n            <div className=\"extra content\">                \r\n                <button className={this.checkstatus(status)[0]} onClick={() => this.props.changeStatus(id, status)}>\r\n                    {this.checkstatus(status)[1]}                             \r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;             \r\n};\r\n\r\nexport default connect(mapStateToProps, { changeStatus })(StatusButton); \r\n\r\n/*\r\nonClick is an HTML keyword (event trigger) which looks for a function (event handler).\r\nThis function will be executed when the trigger happens.\r\nThis function is also called a callback function because it will only execute when called.\r\nAn arrow function can be used to bind \"this\" property. \r\nIf you don't use an arrow function or .bind(this) then the function will execute only once when the page loads.\r\n(It won't be a callback function)\r\n*/","export const changeStatus = (id, status) => {\n  console.log(id, status);\n  return {\n    type: 'STATUS_CHANGE',\n    payload: {id: id, status: status}\n  }\n}\n\nexport const addCard = (task, date, person) => {\n  return {\n    type: 'ADD_CARD',\n    payload: { task: task, date: date, person: person}\n  }\n}\n\nexport const deleteCard = (id) => {\n  return {\n    type: 'DELETE_CARD',\n    payload: {id: id}\n  }\n}\n\nexport const editCard = (id, task, date, person) => {\n  return {\n    type: 'EDIT_CARD',\n    payload: {id: id, task: task, date: date, person: person}\n  }\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteCard } from '../actions';\r\nimport swal from 'sweetalert2';\r\n\r\nclass DeleteButton extends React.Component {\r\n\r\n    checkiconstatus(todo) {\r\n        if (todo.status === 'completed') {\r\n            return \"right floated green circle icon\";\r\n        }\r\n        else {\r\n            return \"right floated red circle icon\";\r\n        }\r\n    }\r\n\r\n    handleDelete = (id) => {\r\n        swal.fire({\r\n            title: 'Are you sure?',\r\n            text: 'You will not be able to recover this task.',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Delete',\r\n            cancelButtonText: 'Cancel'\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                /*swal.fire('Deleted!','Your task has been deleted.','success')*/\r\n                this.props.deleteCard(id);\r\n            }})\r\n    }\r\n    handleStatus(status) {\r\n        if (status === 'not_started') {\r\n            swal.fire({\r\n                text: 'This task is ongoing.'              \r\n            })\r\n        }\r\n        else if (status === 'completed') {\r\n            swal.fire({\r\n                text: 'This task has been completed!'\r\n            })\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className= \"content\">\r\n                <div className=\"ui mini icon buttons right floated\">            \r\n                    <button className=\"ui basic icon right floated button\">\r\n                        <i className={this.checkiconstatus(this.props.todo)} onClick={() => this.handleStatus(this.props.todo.status)}></i>\r\n                    </button>\r\n                    <button className=\"ui basic icon right floated button\" onClick={() => this.handleDelete(this.props.todo.id)}>\r\n                        <i className=\"close icon\" />\r\n                    </button>\r\n                </div>     \r\n                <div className=\"header\">\r\n                    <h4>{this.props.todo.task}</h4>\r\n                </div>             \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => { //binds the deleteCard into the props\r\n    return state;\r\n};\r\n//We are able to use deleteCard because connect adds all the state to the component props\r\nexport default connect(mapStateToProps, { deleteCard })(DeleteButton); ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport StatusButton from './StatusButton';\r\nimport DeleteButton from './DeleteButton';\r\nimport { editCard } from '../actions';\r\n\r\nclass CardContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { editMode: false};\r\n    }\r\n\r\n    cardRender(todo) {\r\n        return (\r\n            <div className=\"column\" key={todo.id} >\r\n                <div className=\"ui fluid grey card\"><div className=\"content\">\r\n                    <DeleteButton todo={todo} />\r\n                    <div className=\"ui sub header\">By {todo.date}</div>\r\n                    <div className=\"ui small feed\"><div className=\"event\">\r\n                        <div className=\"content\">\r\n                            <div className=\"description\"> {todo.person}'s turn </div>\r\n                            <div className=\"ui mini icon buttons right floated\">\r\n                                <button className=\"ui basic icon right floated button\" onClick={() => this.setState({ editMode: true })}>\r\n                                    <i className=\"edit icon\" />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div></div>\r\n                </div></div>\r\n                <StatusButton todo={todo} />\r\n            </div>\r\n        )\r\n    }\r\n    editCardRender(todo) {\r\n        return (\r\n            <div className=\"column\" key={todo.id}>\r\n                <div className=\"ui fluid grey card\">\r\n                    <div className=\"content\">\r\n                        <form className=\"ui mini form\">\r\n                            <div className=\"field\">\r\n                                <input type=\"text\" id=\"tid\" defaultValue={todo.task} />\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <input type=\"text\" id=\"did\" defaultValue={todo.date} />\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <input type=\"text\" id=\"pid\" defaultValue={todo.person} />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div >\r\n                <div className=\"extra content\">\r\n                    <button className=\"ui small blue right floated button\" onClick={this.executeSave} >\r\n                        Save\r\n                    </button>\r\n                    <button className=\"ui small left floated button\" onClick={this.executeCancel}>\r\n                        Cancel\r\n                    </button>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n    executeSave = () => {\r\n        this.setState({ editMode: false });\r\n        this.props.editCard(this.props.todo.id, document.getElementById(\"tid\").value, document.getElementById(\"did\").value, document.getElementById(\"pid\").value);\r\n    }\r\n    executeCancel = () => {\r\n        this.setState({editMode: false});\r\n    }\r\n\r\n    render() {\r\n        //return !this.state.editMode ? this.cardRender(this.props.todo) : this.editCardRender(this.props.todo);\r\n        if (this.state.editMode) {\r\n            return this.editCardRender(this.props.todo);\r\n        }\r\n        else {\r\n            return this.cardRender(this.props.todo);\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {          //function that takes the state from your reducer and pass it into props for your current component\r\n    return { todos: state.todos};              //putting your state of songs into a prop of SongList (in this.props)\r\n};\r\nexport default connect(mapStateToProps, {editCard})(CardContent); ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n//import StatusButton from './StatusButton';\r\n//import DeleteButton from './DeleteButton';\r\n//import EditButton from './EditButton';\r\nimport CardContent from './CardContent';\r\n\r\nclass Card extends React.Component {\r\n\r\n    renderHelper(todoList) {\r\n        return todoList.map((todo) => {\r\n            return (\r\n                <CardContent todo={todo} key={todo.id}></CardContent>\r\n            )           \r\n        })\r\n    }\r\n\r\n    render() {\r\n        return this.renderHelper(this.props.todos);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {          //function that takes the state from your reducer and pass it into props for your current component\r\n    return { todos: state.todos };              //putting your state of songs into a prop of SongList (in this.props)\r\n};\r\nexport default connect(mapStateToProps)(Card); ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {addCard} from '../actions';\r\nimport swal from 'sweetalert2';\r\n\r\nclass AddCard extends React.Component {\r\n\r\n    handleClick = () => {\r\n        let tid = document.getElementById(\"tid\"); //references the whole html element\r\n        let did = document.getElementById(\"did\");\r\n        let pid = document.getElementById(\"pid\");\r\n        if (tid.value === '' || (did.value === '' || pid.value === '')) {\r\n            swal.fire('Error', 'Please fill out all sections.');\r\n        }\r\n        else {\r\n            this.props.addCard(tid.value, did.value, pid.value); //gets the id value from the element as a string\r\n            tid.value = '';\r\n            did.value = '';\r\n            pid.value = '';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"column\">\r\n            <div className=\"ui fluid grey card\">\r\n                <div className=\"content\">                                        \r\n                    <form className=\"ui mini form\">\r\n                        <div className=\"field\">\r\n                            <input type=\"text\" id=\"tid\" placeholder=\"Task Description\"/>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <input type=\"text\" id=\"did\" placeholder=\"Due date\" />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <input type=\"text\" id=\"pid\" placeholder=\"Taskholder\" />\r\n                        </div>\r\n                    </form>                     \r\n                </div>\r\n            </div >\r\n            <div className=\"extra content\">\r\n                <button className=\"ui small right floated button\" onClick={this.handleClick} >\r\n                    Add New Task\r\n                </button>\r\n            </div>\r\n        </div >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {  //binds the addCard into the props\r\n    return state;\r\n};\r\n//We are able to use addCard because connect adds all the state to the component props\r\nexport default connect(mapStateToProps, {addCard})(AddCard); \r\n","import React from 'react';\nimport Menu from './Menu';\nimport Card from './Card';\nimport AddCard from './AddCard';\n\nconst App = () => {\n  return (\n    <div>\n      <Menu />\n      <div className=\"ui container grid very padded\">\n        <div className=\"ui row\">\n          <div className=\"column two wide\">\n            <h1 className=\"ui header\">Task list</h1>    \n          </div>\n        </div>\n        <div className=\"ui row\">\n          <div className=\"ui four column grid stackable cards\">    \n            <Card/>\n            <AddCard/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reduxThunk from 'redux-thunk';\nimport { Provider } from 'react-redux'; // a component within the react-redux library\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reducers from './reducers';   //a component I created\nimport App from './components/App';  //a component I created\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.querySelector('#root'));"],"sourceRoot":""}